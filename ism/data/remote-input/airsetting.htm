<!DOCTYPE html>
<html>
<head>
    <title>Tizen Remote Input</title>
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    <link rel="icon" href="/favicon.ico" type="image/x-icon">
    <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no"/>
     <script src="ajaxCaller.js" type="text/javascript"> </script>
    <link rel="stylesheet" href="remote_input.css" type="text/css"/>
     <script src="util.js" type="text/javascript"> </script>
    <script src="jquery-2.0.2.min.js"></script>
<script type="text/javascript" src="web-helper-client.js"></script>



</head>

<body id="by">
<script>


        // Callback incremental index
        var id_num = 0;
        var ori;
        var CAL_FLUSH_TIMEOUT = 3000;

        var MOUSE_CLICK = 555;
        var KEY_MENU = 10001;
        var KEY_HOME = 10002;
        var KEY_BACK = 10003;
        var scroll_pre_x = 0;
        var scroll_pre_y = 0;
        var cur_air_mode = 0;
        var cur_reset_mode = 0;
        var gry_basic_a = 0;
        var gry_basic_b = 0;
        var gry_basic_g = 0;
        var gry_sum_a = 0;
        var gry_sum_b = 0;
        var gry_sum_g = 0;
        var gry_sum_count = 0;
        var progress = ["",".","..","...","...."];
        var progress_count=0;


        var WebHelperClientHandler = {
            onInit : function () {
                WebHelperClient.log("ON INIT");
            }
        };

        WebHelperClient.initialize(WebHelperClientHandler);


        function cbAjax(text, headers, callingContext){
            id_num++;
            return true;
        }
        function sendKeyEvent(keyCode){
            event.preventDefault();
                WebHelperClient.sendKeyEvent(keyCode);
        }
        function sendMouse_KeyEvent(mouseCode) {
            event.preventDefault();
            if (event.touches.length < 2) {
                WebHelperClient.sendMouse_KeyEvent(mouseCode);
            }
        }
        function sendMouse_MoveEvent(coordinate) {
            event.preventDefault();
            if (event.touches.length < 2) {
                WebHelperClient.sendMouse_MoveEvent(coordinate);
            }
        }

        function sendWheel_MoveEvent(coordinate) {
            event.preventDefault();
            if (event.touches.length < 2) {
                WebHelperClient.sendWheel_MoveEvent(coordinate);
            }
        }
        function sendAir_Input(coordinate) {
            event.preventDefault();
            //if (event.touches.length < 2) {
                WebHelperClient.sendAir_Input(coordinate);
            //}
        }
        function sendAir_Setting(coordinate) {
            event.preventDefault();
            //if (event.touches.length < 2) {
                WebHelperClient.sendAir_Setting(coordinate);
            //}
        }

        function airModeChanged(to) {
                event.preventDefault();
                var air_input_bt = document.getElementById('air_input_mode');
                air_input_bt.style.background = "url("to")";
                air_input_bt.style.backgroundRepeat = "no-repeat";
                air_input_bt.style.backgroundSize = "auto 100%";
                air_input_bt.style.backgroundPosition = "center";
            }
        function make_calibration(gry_a, gry_b, gry_g) {
            gry_sum_a +=gry_a;
            gry_sum_b +=gry_b;
            gry_sum_g +=gry_g;
            gry_sum_count++;
            gry_basic_a = (gry_sum_a/gry_sum_count).toFixed(3);
            gry_basic_b = (gry_sum_b/gry_sum_count).toFixed(3);
            gry_basic_g = (gry_sum_g/gry_sum_count).toFixed(3);

            if (gry_sum_count%4==0){
                //tb_gyro.innerHTML="Calibrating" + progress[progress_count];
                progress_count++;
                if(progress_count >= 5){
                    progress_count = 0;
                }
            }
           // air_click_area.innerHTML="a:"+gry_basic_a + " ,b: " + gry_basic_b + ", g:" + gry_basic_g;
        }

        function get_gyro_calibration(event) {
            event.preventDefault();
            var r = event.rotationRate;
            if(r!=null) {
                make_calibration(r.alpha, r.beta, r.gamma);
            }
        }
        function gyro_event_listener(event) {

            event.preventDefault();
            var x = event.accelerationIncludingGravity.x;
            var y = event.accelerationIncludingGravity.y;
            var z = event.accelerationIncludingGravity.z;
            var r = event.rotationRate;
            var data;


                var gyro_a = r.alpha - gry_basic_a;
                var gyro_b = r.beta - gry_basic_b;
                var gyro_g = r.gamma - gry_basic_g;


                var UserAgent = navigator.userAgent.toLowerCase();
                if(UserAgent.indexOf("android") != -1 ) {
                    gyro_a *=100;
                    gyro_b *=100;
                    gyro_g *=100;
                }

            if((x!=null || y!=null || z!=null || r!=null)) {

                data = x.toFixed(3).toString() + "," + y.toFixed(3).toString() + "," + z.toFixed(3).toString() + "," + gyro_a.toFixed(3).toString() + "," + gyro_b.toFixed(3).toString() + "," + gyro_g.toFixed(3).toString() + ",";
                sendAir_Input(data);

            }
        }
        function imageModeChanged(image, object) {
            //event.preventDefault();
            var bt = document.getElementById(object);
            bt.style.background = "url("image")";
            bt.style.backgroundRepeat = "no-repeat";
            bt.style.backgroundSize = "auto 100%";
            bt.style.backgroundPosition = "center top";
        }
        function Enable_calibration(checker){
            if (checker == true){
                imageModeChanged("reset_bt.png","reset_bt");
                cur_reset_mode = 1;
                window.addEventListener('devicemotion', get_gyro_calibration);
            }
            else{
                imageModeChanged("reset_bt_pressed.png","reset_bt");
                window.removeEventListener('devicemotion', get_gyro_calibration);
                cur_reset_mode = 0;
                //tb_gyro.innerHTML=""
            }
        }
        function sendevent(form){
            if (form == "sys_btn_home2"){
                sendKeyEvent(KEY_HOME);
            }
            else if (form == "sys_btn_back2"){
                sendKeyEvent(KEY_BACK);
            }
            else if (form == "bt_air_click"){
                sendMouse_KeyEvent(MOUSE_CLICK);
            }
            else if (form == "reset_bt" || form == "reset_bt2"){
                    Enable_calibration(true);
                    cal_flush_timeout = window.setTimeout(function(){
                        alert("Finished Gyro Calibration.");
                        Enable_calibration(false);}, CAL_FLUSH_TIMEOUT);
            }
            else if (form == "air_input_mode"){
                if (cur_air_mode == 0 ) {
                    airModeChanged("air_bt.png");
                    cur_air_mode = 1;
                    if(window.DeviceMotionEvent) {
                        window.addEventListener('devicemotion', gyro_event_listener);
                    }
                }
                else{
                    airModeChanged("air_bt_pressed.png");
                    cur_air_mode = 0;
                    if(window.DeviceMotionEvent) {
                        window.removeEventListener('devicemotion', gyro_event_listener);
                    }
                }
            }

        }
        function home_icon_add(title){
            var home_page_uri = document.domain;

            var home_icon_uri = "/shortcut_icon.png";
            var naver_UrlScheme= "intent://addshortcut?url="+home_page_uri+"%3F"+"&icon="+home_icon_uri+"&title="+title+"&oq="+title+"&serviceCode=nstore&version=7#Intent;scheme=naversearchapp;action=android.intent.action.VIEW;category=android.intent.category.BROWSABLE;package=com.nhn.android.search;end";
            var UserAgent = navigator.userAgent.toLowerCase();

            if(UserAgent.indexOf("iphone") == -1 && UserAgent.indexOf("ipad") == -1 && UserAgent.indexOf("tizen") == -1) {
                alert('Add the ' + title +'shortCut icon');
                var home_icon_add_frame=document.getElementById("home_icon_add_frame");
                    home_icon_add_frame.src=naver_UrlScheme;
            }else{
                alert("Not surpport in iOS, Tizen ");
            }
        }

        function send_setting(){

            var data = document.getElementById("CUR_MOVE_ACC").value + ","
                        + document.getElementById("CUR_MOVE_GAIN").value + ","
                        + document.getElementById("CUR_MOVE_SMOOTH").value + ","
                        + document.getElementById("CUR_MOVE_SPEED").value + ","
                        + document.getElementById("FILTER_NUMBER").value + ",";

            sendAir_Setting(data);
            alert("Set New value");

        }

        function reset_sliderbar (){


            document.getElementById("CUR_MOVE_ACC").value = 1.0;
            document.getElementById("CUR_MOVE_GAIN").value = 1.0;
            document.getElementById("CUR_MOVE_SMOOTH").value = 20;
            document.getElementById("CUR_MOVE_SPEED").value = 1.0;
            document.getElementById("FILTER_NUMBER").value = 20;

            showValue("CUR_MOVE_ACC", 1.0);
            showValue("CUR_MOVE_GAIN", 1.0);
            showValue("CUR_MOVE_SMOOTH", 20);
            showValue("CUR_MOVE_SPEED", 1.0);
            showValue("FILTER_NUMBER", 20);

        }

        function showValue(obj, newValue)
        {
            document.getElementById((obj+"1")).innerHTML=newValue;
        }


        $(document).ready(function() {

            var obj = document.getElementById('by');
            obj.style.height =  $(document).height() + "px";

            reset_sliderbar();
            /*
            showValue("ACC_FW_GAIN", 0.000244140625);
            showValue("GYRO_FW_GAIN", 0.00106422515);
            showValue("FACTOR_WEIGHT", 0.1);
            showValue("MIN_MOVING_DELTA", 1);
            showValue("max_tremor_speed", 2);
            showValue("set_max_tremor", 1.0);
            showValue("set_cursor_acceleration", 1.0);
            showValue("set_cursor_gain", 1.65);
            showValue("set_gyro_max_noise", 0.05);
            */
        });

</script>
    <!-- MOUSE MODE -->
    <div id="keymode"  data-role="page" data-fullscreen="true" class ="visible">
       <table class="tb1" >
        <!-- Header -->
            <tr>
                <td class="t_cell t_cell_header cell_width33 cell_height7 logo" onclick="home_icon_add('Tizen_Input')"></td>
                <td id="reset_bt" class="t_cell cell_width33 reset_bt " ontouchstart="javascript:sendevent(this.id)"></td>
                <td id ="air_input_mode" class="t_cell cell_width33 air_input_mode" onclick="javascript:sendevent(this.id)"></td>
            </tr>
            <tr>
                <td  class="t_cell" colspan="3">
                        <!-- Content -->
                        <table class="tb1">
                                <!-- Content_space-top -->
                                <tr>
                                    <td class="t_cell cell_height5 t_cell_vertical_align_bottom" >
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <table id="air_panel" class="tb1_thin_border air_panel ">
                                            <tr>
                                                <td class="t_cell_thin_border cell_height5" colspan="3">
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="t_cell_thin_border cell_width5">
                                                </td>
                                                <td id="bt_air_click" class="t_cell_thin_border air_bt" ontouchstart="javascript:sendevent(this.id)">
                                                </td>
                                                <td class="t_cell_thin_border cell_width5">
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="t_cell_thin_border ">
                                                </td>
                                                <td id ="tb_gyro" class="t_cell_thin_border" style="text-align:left; font-size:10px;">
                                                CUR_MOVE_ACC (1.0)</br>
                                                <input id="CUR_MOVE_ACC" type="range" min="0.1" style="width:250px; height:30px"  step="0.5" max="10.0" onchange="showValue(this.id,this.value)" /> <span id="CUR_MOVE_ACC1"></span></br>
                                                </br>CUR_MOVE_GAIN (1.0)</br>
                                                <input id="CUR_MOVE_GAIN" type="range" min="0.1" style="width:250px; height:30px" step="0.1" max="3.0" onchange="showValue(this.id,this.value)" /> <span id="CUR_MOVE_GAIN1"></span></br>
                                                </br>CUR_MOVE_SMOOTH (20)</br>
                                                <input id="CUR_MOVE_SMOOTH" type="range" min="0" style="width:250px; height:30px" max="80" step="5" onchange="showValue(this.id,this.value)" /> <span id="CUR_MOVE_SMOOTH1"></span></br>
                                                </br>CUR_MOVE_SPEED (1.0)</br>
                                                <input id="CUR_MOVE_SPEED" type="range" min="0.1" max="3.0" style="width:250px; height:30px" step="0.1" onchange="showValue(this.id,this.value)" /> <span id="CUR_MOVE_SPEED1"></span></br>
                                                </br>FILTER_NUMBER (20)</br>
                                                <input id="FILTER_NUMBER" type="range" min="5" max="60" style="width:250px; height:30px" step="5" onchange="showValue(this.id,this.value)" /> <span id="FILTER_NUMBER1"></span></br>


                                                </br><input id="send_setting" type="button" value="send setting" onclick="send_setting()"/>
                                                <input id="reset_setting" type="button" value="reset setting" onclick="reset_sliderbar()"/>
                                                </td>
                                                <td class="t_cell_thin_border">
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <!-- Content_space-bottom -->
                        </table>
                </td>
            </tr>
        <!-- Footer -->
            <tr>
                <td id="sys_btn_home2" class="t_cell_footer apps" ontouchstart="javascript:sendevent(this.id)"></td>
                <td id="sys_btn_modechange2" class="t_cell_footer modeswitcher_to_tv" ></td>
                <td id="sys_btn_back2" class="t_cell_footer back" ontouchstart="sendevent(this.id)"></td>
            </tr>

        </table>
    </div>
<iframe id="home_icon_add_frame" style="display:none;width:0px;height:0px;"></iframe>
<!-- end page 2 -->
</body>
</html>


