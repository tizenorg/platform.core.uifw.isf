<!DOCTYPE html>
<html>
<head>
<title>Tizen Remote Input</title>
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable = no">
<link rel="stylesheet" href="jquery.mobile-1.3.1.min.css" type="text/css"/>
<script src="ajaxCaller.js" type="text/javascript"> </script>
<script src="util.js" type="text/javascript"> </script>
<script src="jquery-2.0.2.min.js"></script>
<script src="jquery.mobile-1.3.1.min.js"></script>
</head>

<body>


<input type="button" value="Start" onclick="start()" id="startBtn"/>
<div id="debugconsole"></div>

<script>
 var startBtn = document.getElementById('startBtn'),
     debug = document.getElementById('debugconsole');

 function start() {
   if(navigator.getNetworkServices) {
      navigator.getNetworkServices('zeroconf:_xbmc-jsonrpc._tcp', gotXBMCService, error);
      startBtn.disabled = true;
   } else {
      debug.innerHTML += "<br>Service Discovery not supported!";
   }
 }

 function gotXBMCService(services) {

// Listen for service disconnect messages

   services[0].addEventListener('serviceoffline', function ( e ) {
       debug.innerHTML += "<br>" + services[0].name + " disconnected.";
       startBtn.disabled = false;
   }, false);

// Send a service message to get albums list (and process the service response)

   var svcXhr = new XMLHttpRequest();
   svcXhr.open("POST", services[0].url + "/getAlbums"); // services[0].url and its sub-resources have been
                                                        // whitelisted for cross-site XHR use in this
                                                        // current browsing context.

   svcXhr.setRequestHeader('Content-Type', 'application/json-rpc');

   svcXhr.addEventListener('readystatechange', function ( response ) {
     if( response.readyState != 4 || response.status != 200 )
        return;
     debug.innerHTML += "<br>" + services[0].name + " response received: ";
     debug.textContent += JSON.parse(response.responseText);
   }, false);

   var svcMsg = [
     { "jsonrpc": "2.0", "method": "AudioLibrary.GetAlbums", "params": { "genreid": -1,
         "artistid": -1, "start": -1, "end": -1 }, "id": "1" }
   ];

   svcXhr.send(JSON.stringify(svcMsg));
   debug.innerHTML += "<br>" + services[0].name + " request sent: ";
   debug.textContent += JSON.stringify(svcMsg);

 }

 function error( err ) {
   debug.innerHTML += "<br>An error occurred obtaining a local network service.";
   startBtn.disabled = false;
 }
</script>
</body>
</html>


